# Generated by Django 5.2 on 2025-04-24 21:25

import django.db.models.deletion
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_type', models.CharField(choices=[('research', 'Research Article'), ('review', 'Review Article'), ('analytical', 'Analytical Article'), ('descriptive', 'Descriptive Article'), ('theoretical', 'Theoretical Article'), ('short', 'Short Communication'), ('survey', 'Survey Article'), ('narrative', 'Narrative Article'), ('editorial', 'Editorial'), ('practical', 'Practical Article')], max_length=100, verbose_name='Article Type')),
                ('subtitle', models.CharField(blank=True, max_length=300, verbose_name='Subtitle')),
                ('abstract', models.TextField(blank=True, verbose_name='Abstract')),
                ('aricale_status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('under_review', 'Under Review'), ('accepted', 'Accepted'), ('published', 'Published'), ('rejected', 'Rejected')], default='draft', max_length=20, verbose_name='Status')),
                ('journal', models.CharField(blank=True, max_length=200, verbose_name='Journal/Conference')),
                ('volume', models.CharField(blank=True, max_length=50, verbose_name='Volume')),
                ('issue', models.CharField(blank=True, max_length=50, verbose_name='Issue')),
                ('pages', models.CharField(blank=True, max_length=50, verbose_name='Pages')),
                ('doi', models.CharField(blank=True, max_length=100, unique=True, verbose_name='DOI')),
                ('is_published', models.BooleanField(default=False, verbose_name='Published')),
                ('publish_date', models.DateField(blank=True, null=True, verbose_name='Publish Date')),
                ('citation_count', models.PositiveIntegerField(default=0, verbose_name='Citation Count')),
                ('download_count', models.PositiveIntegerField(default=0, verbose_name='Download Count')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='View Count')),
                ('manuscript', models.FileField(blank=True, null=True, upload_to='articles/manuscripts/%Y/%m/%d/', verbose_name='Manuscript File')),
                ('supplementary_materials', models.FileField(blank=True, null=True, upload_to='articles/supplementary/%Y/%m/%d/', verbose_name='Supplementary Materials')),
                ('submitted_date', models.DateField(blank=True, null=True, verbose_name='Submitted Date')),
                ('accepted_date', models.DateField(blank=True, null=True, verbose_name='Accepted Date')),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
                'ordering': ['-publish_date'],
            },
        ),
        migrations.CreateModel(
            name='ArticleTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Template Name')),
                ('article_type', models.CharField(choices=[('research', 'Research Article'), ('review', 'Review Article'), ('analytical', 'Analytical Article'), ('descriptive', 'Descriptive Article'), ('theoretical', 'Theoretical Article'), ('short', 'Short Communication'), ('survey', 'Survey Article'), ('narrative', 'Narrative Article'), ('editorial', 'Editorial'), ('practical', 'Practical Article')], max_length=100, verbose_name='Article Type')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('discipline', models.CharField(blank=True, max_length=100, verbose_name='Discipline')),
                ('journal', models.CharField(blank=True, max_length=200, verbose_name='Target Journal')),
                ('is_default', models.BooleanField(default=False, verbose_name='Default Template')),
            ],
            options={
                'verbose_name': 'Article Template',
                'verbose_name_plural': 'Article Templates',
            },
        ),
        migrations.CreateModel(
            name='ArticleTemplateSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_type', models.CharField(choices=[('title', 'Title'), ('abstract', 'Abstract'), ('introduction', 'Introduction'), ('stimuli', 'Stimuli'), ('subject', 'Subject'), ('procedure', 'Procedure'), ('data_acquisition', 'Data acquisition and analysis'), ('results', 'Results'), ('discussion', 'Discussion'), ('conclusion', 'Conclusion'), ('analysis', 'In-depth Analysis'), ('arguments', 'Logical Arguments'), ('literature_review', 'Literature Review'), ('synthesis', 'Synthesis'), ('case_study', 'Case Study'), ('implications', 'Practical Implications'), ('limitations', 'Limitations'), ('acknowledgments', 'Acknowledgments')], max_length=100, verbose_name='Section Type')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Default Title')),
                ('description', models.TextField(blank=True, verbose_name='Description/Guidance')),
                ('required', models.BooleanField(default=True, verbose_name='Required Section')),
                ('default_position', models.PositiveIntegerField(default=0, verbose_name='Default Position')),
                ('word_count_guide', models.CharField(blank=True, max_length=100, verbose_name='Word Count Guide')),
                ('example', models.TextField(blank=True, verbose_name='Example Content')),
            ],
            options={
                'verbose_name': 'Template Section',
                'verbose_name_plural': 'Template Sections',
                'ordering': ['default_position'],
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(max_length=100, unique=True, verbose_name='Keyword')),
                ('slug', models.SlugField(blank=True, max_length=110, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ResearchProjectTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Template Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('disciplines', models.CharField(blank=True, max_length=200, verbose_name='Applicable Disciplines')),
                ('is_default', models.BooleanField(default=False, verbose_name='Default Template')),
            ],
            options={
                'verbose_name': 'Research Project Template',
                'verbose_name_plural': 'Research Project Templates',
            },
        ),
        migrations.CreateModel(
            name='ResearchProjectTemplateSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_type', models.CharField(choices=[('title', 'Title'), ('abstract', 'Abstract'), ('introduction', 'Introduction'), ('research_design', 'Research Design'), ('participants', 'Participants'), ('materials', 'Materials/Instruments'), ('procedure', 'Procedure'), ('data_collection', 'Data Collection'), ('data_analysis', 'Data Analysis'), ('ethical_considerations', 'Ethical Considerations'), ('results', 'Results'), ('discussion', 'Discussion'), ('conclusion', 'Conclusion'), ('references', 'References'), ('appendices', 'Appendices')], max_length=100, verbose_name='Section Type')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Default Title')),
                ('description', models.TextField(blank=True, verbose_name='Description/Guidance')),
                ('required', models.BooleanField(default=True, verbose_name='Required Section')),
                ('default_position', models.PositiveIntegerField(default=0, verbose_name='Default Position')),
                ('example', models.TextField(blank=True, verbose_name='Example Content')),
            ],
            options={
                'verbose_name': 'Project Template Section',
                'verbose_name_plural': 'Project Template Sections',
                'ordering': ['default_position'],
            },
        ),
        migrations.CreateModel(
            name='ArticleSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_type', models.CharField(choices=[('title', 'Title'), ('abstract', 'Abstract'), ('introduction', 'Introduction'), ('stimuli', 'Stimuli'), ('subject', 'Subject'), ('procedure', 'Procedure'), ('data_acquisition', 'Data acquisition and analysis'), ('results', 'Results'), ('discussion', 'Discussion'), ('conclusion', 'Conclusion'), ('analysis', 'In-depth Analysis'), ('arguments', 'Logical Arguments'), ('literature_review', 'Literature Review'), ('synthesis', 'Synthesis'), ('case_study', 'Case Study'), ('implications', 'Practical Implications'), ('limitations', 'Limitations'), ('acknowledgments', 'Acknowledgments')], max_length=100, verbose_name='Section Type')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Section Title')),
                ('content', tinymce.models.HTMLField(blank=True, verbose_name='Content')),
                ('position', models.PositiveIntegerField(default=0, verbose_name='Position in Article')),
                ('guidance', models.TextField(blank=True, verbose_name='Writing Guidance')),
                ('word_count', models.PositiveIntegerField(default=0, verbose_name='Word Count')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='Main.article', verbose_name='Article')),
            ],
            options={
                'verbose_name': 'Article Section',
                'verbose_name_plural': 'Article Sections',
                'ordering': ['position'],
            },
        ),
        migrations.AddField(
            model_name='article',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Main.articletemplate', verbose_name='Article Template'),
        ),
        migrations.AddField(
            model_name='articletemplate',
            name='sections',
            field=models.ManyToManyField(related_name='templates', to='Main.articletemplatesection', verbose_name='Sections'),
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last Name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('orcid_id', models.CharField(blank=True, help_text='Format: XXXX-XXXX-XXXX-XXXX', max_length=19, verbose_name='ORCID ID')),
                ('affiliation', models.CharField(blank=True, max_length=200, verbose_name='Affiliation')),
                ('department', models.CharField(blank=True, max_length=200, verbose_name='Department')),
                ('researcher_id', models.CharField(blank=True, max_length=50, verbose_name='Researcher ID')),
                ('scopus_id', models.CharField(blank=True, max_length=50, verbose_name='Scopus Author ID')),
                ('google_scholar_id', models.CharField(blank=True, max_length=50, verbose_name='Google Scholar ID')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='author_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Author',
                'verbose_name_plural': 'Authors',
                'ordering': ['last_name', 'first_name'],
                'unique_together': {('first_name', 'last_name', 'email')},
            },
        ),
        migrations.CreateModel(
            name='ArticleAuthorship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_corresponding', models.BooleanField(default=False, verbose_name='Corresponding Author')),
                ('authorship_order', models.PositiveIntegerField(default=0, verbose_name='Authorship Order')),
                ('affiliation', models.CharField(blank=True, max_length=200, verbose_name='Affiliation for this work')),
                ('contributions', models.TextField(blank=True, verbose_name='Author Contributions')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Author Email for this work')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Main.article', verbose_name='Article')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Main.author', verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Article Authorship',
                'verbose_name_plural': 'Article Authorships',
                'ordering': ['authorship_order'],
                'unique_together': {('article', 'author')},
            },
        ),
        migrations.AddField(
            model_name='article',
            name='authors',
            field=models.ManyToManyField(related_name='authored_articles', through='Main.ArticleAuthorship', to='Main.author', verbose_name='Authors'),
        ),
        migrations.AddField(
            model_name='article',
            name='keywords',
            field=models.ManyToManyField(blank=True, related_name='articles', to='Main.keyword', verbose_name='Keywords'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('notification_type', models.CharField(choices=[('project_update', 'Project Update'), ('collaboration', 'Collaboration'), ('comment', 'Comment'), ('mention', 'Mention'), ('system', 'System')], max_length=50)),
                ('related_object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('related_content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, verbose_name='Biography')),
                ('phone_number', models.CharField(blank=True, max_length=15, verbose_name='Phone Number')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('academic_degree', models.CharField(blank=True, max_length=100, verbose_name='Academic Degree')),
                ('field_of_study', models.CharField(blank=True, max_length=100, verbose_name='Field of Study')),
                ('university', models.CharField(blank=True, max_length=100, verbose_name='University')),
                ('department', models.CharField(blank=True, max_length=100, verbose_name='Department')),
                ('position', models.CharField(blank=True, max_length=100, verbose_name='Position/Role')),
                ('website', models.URLField(blank=True, verbose_name='Website')),
                ('linkedin', models.URLField(blank=True, verbose_name='LinkedIn Profile')),
                ('google_scholar', models.URLField(blank=True, verbose_name='Google Scholar Profile')),
                ('researchgate', models.URLField(blank=True, verbose_name='ResearchGate Profile')),
                ('email_confirmed', models.BooleanField(default=False, verbose_name='Email Confirmed')),
                ('public_profile', models.BooleanField(default=False, verbose_name='Public Profile')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
                'ordering': ['user__username'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visibility', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('team', 'Team Only')], default='private', max_length=10, verbose_name='Visibility')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, max_length=210, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('type', models.CharField(choices=[('article_writing', 'Article Writing'), ('book_writing', 'Book Writing'), ('book_translation', 'Book Translation'), ('research_proposal', 'Research Proposal'), ('research_project', 'Research Project'), ('thesis', 'Thesis/Dissertation')], max_length=100, verbose_name='Project Type')),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('published', 'Published'), ('canceled', 'Canceled')], default='not_started', max_length=100, verbose_name='Status')),
                ('progress', models.IntegerField(choices=[(0, 'Not Started'), (25, '25% Completed'), (50, '50% Completed'), (75, '75% Completed'), (100, '100% Completed')], default=0, verbose_name='Progress')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('collaborators', models.ManyToManyField(blank=True, related_name='collaborated_projects', to=settings.AUTH_USER_MODEL, verbose_name='Collaborators')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_projects', to=settings.AUTH_USER_MODEL, verbose_name='Project Owner')),
                ('related_projects', models.ManyToManyField(blank=True, help_text='Projects related to this one', to='Main.project', verbose_name='Related Projects')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['-created_at'],
                'permissions': [('can_invite_collaborators', 'Can invite collaborators'), ('can_change_visibility', 'Can change project visibility')],
            },
        ),
        migrations.AddField(
            model_name='article',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles', to='Main.project', verbose_name='Project'),
        ),
        migrations.CreateModel(
            name='ProjectComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Content')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('mentioned_users', models.ManyToManyField(blank=True, related_name='mentioned_in_comments', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='Main.projectcomment')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='Main.project', verbose_name='Project')),
            ],
            options={
                'verbose_name': 'Project Comment',
                'verbose_name_plural': 'Project Comments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ResearchProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.CharField(max_length=200, verbose_name='Organization')),
                ('research_code', models.CharField(blank=True, max_length=50, verbose_name='Research Code')),
                ('supervisor', models.CharField(blank=True, max_length=50, verbose_name='Supervisor')),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Total Budget')),
                ('funding_source', models.CharField(blank=True, max_length=200, verbose_name='Funding Source')),
                ('grant_number', models.CharField(blank=True, max_length=100, verbose_name='Grant Number')),
                ('deliverables', models.TextField(blank=True, verbose_name='Project Deliverables')),
                ('research_project_status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Completed')], default='draft', max_length=20, verbose_name='Status')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='researchproject', to='Main.project', verbose_name='Project')),
                ('publications', models.ManyToManyField(blank=True, to='Main.article', verbose_name='Related Publications')),
                ('research_team', models.ManyToManyField(blank=True, related_name='team_projects', to='Main.author', verbose_name='Research Team')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Main.researchprojecttemplate', verbose_name='Project Template')),
            ],
            options={
                'verbose_name': 'Research Project',
                'verbose_name_plural': 'Research Projects',
            },
        ),
        migrations.CreateModel(
            name='ResearchProjectSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_type', models.CharField(choices=[('title', 'Title'), ('abstract', 'Abstract'), ('introduction', 'Introduction'), ('research_design', 'Research Design'), ('participants', 'Participants'), ('materials', 'Materials/Instruments'), ('procedure', 'Procedure'), ('data_collection', 'Data Collection'), ('data_analysis', 'Data Analysis'), ('ethical_considerations', 'Ethical Considerations'), ('results', 'Results'), ('discussion', 'Discussion'), ('conclusion', 'Conclusion'), ('references', 'References'), ('appendices', 'Appendices')], max_length=100, verbose_name='Section Type')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Section Title')),
                ('content', tinymce.models.HTMLField(blank=True, verbose_name='Content')),
                ('position', models.PositiveIntegerField(default=0, verbose_name='Position in Project')),
                ('guidance', models.TextField(blank=True, verbose_name='Writing Guidance')),
                ('word_count', models.PositiveIntegerField(default=0, verbose_name='Word Count')),
                ('research_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='Main.researchproject', verbose_name='Research Project')),
            ],
            options={
                'verbose_name': 'Research Project Section',
                'verbose_name_plural': 'Research Project Sections',
                'ordering': ['position'],
            },
        ),
        migrations.AddField(
            model_name='researchprojecttemplate',
            name='sections',
            field=models.ManyToManyField(related_name='templates', to='Main.researchprojecttemplatesection', verbose_name='Sections'),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Due Date')),
                ('completed', models.BooleanField(default=False, verbose_name='Completed')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10, verbose_name='Priority')),
                ('completed_date', models.DateTimeField(blank=True, null=True, verbose_name='Completed Date')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Assigned To')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='Main.project', verbose_name='Project')),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
                'ordering': ['due_date'],
            },
        ),
        migrations.CreateModel(
            name='Webhook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('target_url', models.URLField()),
                ('event_types', models.CharField(max_length=255)),
                ('secret', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webhooks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('reference_type', models.CharField(choices=[('book', 'Book'), ('article', 'Journal Article'), ('thesis', 'Thesis/Dissertation'), ('conference', 'Conference Paper'), ('report', 'Report'), ('website', 'Website'), ('other', 'Other')], max_length=20, verbose_name='Reference Type')),
                ('citation_key', models.CharField(blank=True, max_length=100, verbose_name='Citation Key')),
                ('authors', models.TextField(verbose_name='Authors')),
                ('title', models.CharField(max_length=500, verbose_name='Title')),
                ('publication_date', models.CharField(blank=True, max_length=50, verbose_name='Publication Date')),
                ('publisher', models.CharField(blank=True, max_length=200, verbose_name='Publisher')),
                ('journal', models.CharField(blank=True, max_length=200, verbose_name='Journal')),
                ('volume', models.CharField(blank=True, max_length=50, verbose_name='Volume')),
                ('issue', models.CharField(blank=True, max_length=50, verbose_name='Issue')),
                ('pages', models.CharField(blank=True, max_length=50, verbose_name='Pages')),
                ('doi', models.CharField(blank=True, max_length=100, verbose_name='DOI')),
                ('url', models.URLField(blank=True, verbose_name='URL')),
                ('isbn', models.CharField(blank=True, max_length=20, verbose_name='ISBN')),
                ('abstract', models.TextField(blank=True, verbose_name='Abstract')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Reference',
                'verbose_name_plural': 'References',
                'ordering': ['authors'],
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='Main_refere_content_2c9964_idx')],
            },
        ),
    ]
